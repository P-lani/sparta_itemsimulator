// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

//provier = mysql

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 계정 테이블
model Users {
  userId    Int      @id @default(autoincrement()) @map("user_id")
  userName  String   @unique @map("user_name")
  email     String   @unique @map("email")
  password  String   @map("password")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userInfo  String?  @default("안녕하세요") @map("user_info")

  character Character[]

  @@map("users")
}

// 아이템 테이블
// itemType Int = 아이템 유형으로 활용.
// 9 기타 /10 무기/11 보조무기/12 갑옷/13 투구/ 14 장갑/15 신발/16 목걸이/17 벨트/18 반지
model Items {
  itemId     Int     @id @default(autoincrement()) @map("item_id")
  itemName   String  @map("item_name")
  itemPrice  Int     @default(0) @map("item_price")
  itemStatus Json?   @map("item_status")
  itemInfo   String? @default("생성된_아이템") @map("item_info")
  itemType   Int     @map("item_type")

  inventory Inventory[]

  @@map("items")
}

// 캐릭터 테이블
model Character {
  characterId            Int    @id @default(autoincrement()) @map("Character_id")
  characterName          String @unique @map("character_name")
  characterMoney         Int    @default(10000) @map("character_money")
  characterHealth        Int    @default(500) @map("character_health")
  characterAttack        Int    @default(100) @map("character_attack")
  characterInventorySize Int    @default(10) @map("character_inventory_size")

  userId Int   @map("user_id")
  user   Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

  inventory Inventory[]

  @@map("character")
}

// 인벤토리 테이블
// inventoryNumber 는, 인벤토리의 몇 번째 칸? 에 해당하는 방향으로 구현
model Inventory {
  inventoryId     Int     @id @default(autoincrement()) @map("inventory_id")
  inventoryNumber Int     @default(0) @map("inventory_number")
  equippedItem    Boolean @default(false) @map("equipped_item")

  characterId Int       @map("Character_id")
  charInven   Character @relation(fields: [characterId], references: [characterId], onDelete: Cascade)

  itemId   Int    @map("item_id")
  itemType Int    @map("item_type")
  Items    Items? @relation(fields: [itemId], references: [itemId])

  @@map("inventory")
}
